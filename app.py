 C√≥digo do agente com interface web

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler

st.set_page_config(page_title="Agente EDA", layout="wide")
st.title("üß† Agente Aut√¥nomo de E.D.A.")

memoria_analises = []

uploaded_file = st.file_uploader("üìÅ Fa√ßa upload do arquivo CSV", type=["csv"])

if uploaded_file:
    df = pd.read_csv(uploaded_file)

    st.success("‚úÖ Arquivo carregado com sucesso!")
    st.write("Colunas:", df.columns.tolist())
    st.write("N√∫mero de linhas:", len(df))

    pergunta = st.text_input("üí¨ Fa√ßa uma pergunta sobre os dados")

    def responder_pergunta(pergunta):
        pergunta = pergunta.lower()
        if "tipo" in pergunta or "dados" in pergunta:
            memoria_analises.append("Analisou os tipos de dados.")
            st.write(df.dtypes)
        elif "distribui√ß√£o" in pergunta:
            memoria_analises.append("Analisou distribui√ß√µes.")
            fig = plt.figure(figsize=(20, 15))
            df.hist(bins=50)
            st.pyplot(fig)
        elif "correla√ß√£o" in pergunta:
            memoria_analises.append("Analisou correla√ß√µes.")
            fig = plt.figure(figsize=(15, 12))
            sns.heatmap(df.corr(), cmap="coolwarm")
            st.pyplot(fig)
        elif "conclus√£o" in pergunta:
            if not memoria_analises:
                st.write("Nenhuma an√°lise foi realizada ainda.")
            else:
                st.write("Resumo das an√°lises realizadas:")
                for item in memoria_analises:
                    st.write(f"- {item}")
        else:
            st.write("Desculpe, n√£o entendi sua pergunta.")

    if pergunta:
        responder_pergunta(pergunta)
